
@@@@@@@@@
Day-1 :::
@@@@@@@@@


Intro SDLC -- Software Development Lifecycle!!!!

Developers, DevOps Engi.

Requirement Analysis!
Design
Develop the code
Test
Deploy the code 
Maintain...

Waterfall Model!!!

Agile Methodology

Iteration1 sign-up
	Requirement Analysis!
	Deesign
	Devlop the code
	Test
	Deploy the code 
	Maintain...

Iteration2
	Requirement Analysis!
	Design
	Develop the code
	Test
	Deploy the code 
	Maintain...

Real Time Business Requirement!!!

Application -->
	
	Monolith Application


DevOps!!! - Software Development Strategy!!!

Telecom service provider1			--> wants to introduce a new offer --> 
Telecom service provider2


amazon.com ::

sign-up								function / service -- make some changes and ready to deploy to prod
sign-in 
search for products
add to cart 
place the order
make payment
confirm order
track
	
	Monolith based Application
				(vs)
	Microservice based Applications   === No Downtime is needed 

Banking Application!!!

deployment Window ::: 4Hr.


Devops Strategy!

SDLC Process 

DevOps Strategy:: is all about People/Process/Tools  

DevOps Team :::

			Infra-Structure Team(operations)   -- create 100 test servers. 
			Development Team				Java Appln. - code - build the code - create artifacts(binaries)*.war
			Testing Team
			Release Management Team
			Production Support Team
			Monitoring Team			
			Security Team 
			
Waterfall Model / Agile :::

Environments::::


Non-Prod Environments							Prod Environment

DEV Environment	 pgm1.war						PROD Environment (LIVE - Environment)

Test Environments
	- QA	
	- UAT
	- Pre-Prod / Staging

Deployment --> Consider source and Target environment 

Deployment workflow ::

DEV --> QA --> UAT --> Pre-Prod/Staging   -----> PROD 

Developer -- 




DevOps Stages!!!!


Continuous Development			DEV Team 
Continuous Integration		

Continuous Delivery

Continuous Deployment

Developer1 --- Service1 -- Java Web Application, perform Unit Testing 
Interate the code to Higher environment (QA) --> (UAT) --> Pre-Prod/Staging

Developer2 --- Service2 -- Java Web Application, perform Unit Testing
Interate the code to Higher environment (QA) --> (UAT) --> Pre-Prod/Staging

DevOps Tools like Jenkins 

1000 Microservices 


Developer1   -- Sign-in(Module/service) -- Java - src code -- build -- created artifacts(binaries)0/1 *.war / *.jar
				do the unit testing  		pgm1.java			pgm1.war
				Pushed to QA Environment for further testing
				
Developer2   -- Sign-up(Module/service) -- Java - src code -- build -- created artifacts(binaries)0/1 *.war / *.jar
				do the unit testing  		pgm1.java			pgm1.war
				Pushed to QA Environment for further testing



Continuous Delivery / Deployment ???



Production Release Process !!!

	Continuous Delivery Strategy		---> It requires Manual Approval to deploy to PROD 
			(or)
	Continuous Deployment Strategy		---> It is automatically deployed PROD

DEV(src_code --> build(Compile) --> created artifacts(binaries)*.war) --> QA --> UAT --> Pre-Prod/Staging   -----> PROD 

DevSecOps**

Change Request :: 

All your Banking sectors  		---> Continuous Delivery

Facbook/netflix/google/amazon 	---> Continuous Deployment

**************************************

Multi-user environment 

	Developer1		-	payment_verification_module.java - func-1 - SRC Repo - Branch - build, create artifacts pushed to QA
	Developer2 		- 	payment_verification_module.java - func-2 - SRC Repo - Branch - build, create artifacts pushed to QA

Continuous Integration :::




Trained DevOps Resource - DevOps Engi. 

15+ 

Creating Automated scripts !!!! 

	- shell script
	- groovy script
	- yaml script
	- python script 
	
Automate ==	CI / C-Delivery & C/Deployment




@@@@@@@@@
Day-2 :::
@@@@@@@@@


DevOps Skills ::

Tool :::

Uses Case!!

	-	Create a Web Application!

Design Documents!!

Development Phase :::

DevOps Workflow:

	DEV Environment:
	
		Developers will do the code development - Java program -- *.jsp 
		They use Eclipe Based IDE - Visual Studio Code, Eclipse

		Build - Compile the src Code

		Create Artifacts ( Binaries) *.war 

	Deploy to Test Environments (QA)

	Deploy to Test Environments (UAT)

	Deploy to Test Environments (PROD)
	
	Monitor the Appln running Prod.


What is Your Role???

DevOps Implementation!!!

Complete CI CD Pipeline -- which can automate these actions

SCM Tool -- Version Control System 
SCM Tool - Version Control System : Used by Developer 

	Save the source Code
	Track the changes 
	Version Control the Source Code 

Build Tools : MAVEN,ANT,GRADLE -- Compile and Create Artifacts

Deployment - is the process of copying/promoting the artifacts from one environment to another environment.
		Eg.: Ansible 

Monitor Prod Applications / Infra :
	Using Monitoring tools like Prometheus/Grafana/Nagios

DevOps Tools ::
	Open Source Tools 

Cloud Environment 
 AWS , AZURE , GCP -->
Managed Services 


What the Role of DevOps Engineer here? ??

Create Automation SCripts to perform these end-to-end CI/CD process.


Jenkins -- Build Orchestration Tool 


Pick-up the src code from SCM 

Perform Build

Create Artifacts 

Perform Automated Testing

Deploy 

Notified to the users

DEV(src_code --> build(Compile) --> created artifacts(binaries)*.war) --> QA --> UAT --> Pre-Prod/Staging   -----> PROD 


Testing Team in QA Envi. will do the testing 
		selenium
		
		Test Data,
		Test Envi,
		Test Cases
		Test Scenarios...
		
		Manually / Automatically

DevOps 

Integrate test automation in CI/CD pipeline 



Bugs/Errors 


GIT ===>

Github ---> Used to manage the src and document in the form or repositories.


@@@@@@@@@
DAY-3
@@@@@@@@@


Web Development --> Project.

E-Commerce Portal!!! Web Site..

	Dev.Environment === for code and development
	
	Test.Environment === for Testing the Applications
		
	PROD.Environment === Deployed 
	Hosted Servers
	Application Servers 

	
Infrastructure ===> 

	On-Premises Environment 
	
	Cloud Platforms 
	
	



Microservices!!!!

	DevOps CI/CD Pipeline, I need to test 1000 microservices
	
		1000 servers to test all these 1000 microservices ?
	
		Server Provisioning Tool to automatically create the 1000 servers										Terraform
		
		Configuration Management Tool to automatically configure the required tools in all these servers.		Ansible
		jdk1.8, 
	
		Destroy all the 1000 servers once testing is completed!													Terraform
		
	IAC	

*************************************

Labs :::

	Edureka Lab -- dedicated cloud platform for labs
	AWS Cloud Platforms :::

Task for Today:

	-	Create AWS Free Tier Account
	-	Create EC2 - AmazonLinux Instances

Next Session:
	-	Install SSH-Client.
			mobaxterm			*.pem
			putty				*.ppk
	-	Connect to Ec2 Instances!




@@@@@@@@@
DAY-4 :
@@@@@@@@

Next Session:
	-	Install SSH-Client.
			mobaxterm			*.pem							Windows --> mobaxterm or putty
			putty				*.ppk							Mac		--> putty 
	-	Connect to Ec2 Instances!
	-	AWS Linux Instances -- All the basic Linux commands.


Why we need AWS Instances!!!!

Cloud --- Need some infra for our appln.

Create Virtual Machines! (EC2 Instances)
		Linux 
		Mac 
		Windows
		

DevOps Tools :::
	Jenkins,Ansible,Docker,Kubernetes...


	-	Stop / Terminate 
	-	Start 


	-	How to connect to EC2 Amazon Linux Instances  default user is (ec2-user) 
			-	EC2 Instance connect through Browser
				-	Select the instance
				-	Click on Connect button
			-	SSH-Client
				-	Mobaxterm
					Install MobaXterm
				-   Putty
			-	Command Prompt / Terminal
			
		Connected to Linux Machine!
		
			How to Work on Linux !!!
			
Linux 

		What is OS ?
		Which OS ?
		
		Login to ur Machine 
			Create Users
			Create User Groups / Access level
		
		Install some tools or software
		
		Work on some File Systems
			Create / update / delete any files.
		
		Storage 
		
		Secure the files 
		
		Share the files to remote servers
		Connect to my remote servers 
			How securely you can connect ?
			What are the security feature you need ??
				Password based auth 
				Passwordless auth
				Key based auth 
		
		Scripts 
			shell Scripts 
		
		
		
DevOps 

CI/CD Pipeline 		
		
		
	Dev.Environment === for code and development  (server Linux)  --> jdk1.8 --> python *.java
	
	Test.Environment === for Testing the Applications	(Test Server Linux) 
		
	PROD.Environment === Deployed 
	Hosted Servers
	Application Servers 
			
	
	The Linux Commands are dependents upon the Linux Distributions!!!



Linux Commands::


		clear -- clear the scr
		Package Managers		- are used to install and manage(update/remove) the packages 
			yum 		- centos/redhat/amazon linux
			apt-get		- Debian / Ubuntu
			rpm		
		All the Package Managers shd be executed as root user in Linux.
		
		sudo yum update -y
		sudo -i
		echo "Hello"
		touch file1.txt
		cat file1.txt 
		

    1  yum update -y
    2  clear
    3  echo "HEllo Everyone"
    4  touch file1.txt
    5  ls
    6  pwd
    7  cat file1.txt 
    8  echo "Hello Everyone" >> file2.txt
    9  ls
   10  cat file2.txt 
   11* 
   12  cat file2.txt 
   13  echo "New Record" > file2.txt
   14  cat file2.txt 
   15  history
   
   
		cat file2.txt			==	 print the file contents in read-only mode.
		
		vi file2.txt			==	 open the file in edit mode. 
			Press 'i' to insert new records in the file 
			esc :wq 			==> save and quit the file
			esc :q!				==> exit from the file without save.


Shell Scripts!!!!
yaml scripts
			Managed Services --> AWS , Azure!
Use Visual Studio Code - IDE 
